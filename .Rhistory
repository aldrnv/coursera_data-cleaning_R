setwd("C:/Users/AV058983/Google Drive/Den/Education/(2018-2022) UC Davis - PhD/First Year (2018-19)/NRS299 (Coursera)/Projects/Course 3/Getting and Cleaning Data")
# Download and Unzip file
SamsungData <- 'https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip'
download.file(SamsungData, 'UCI-HAR-dataset.zip')
unzip('./UCI-HAR-dataset.zip', exdir = getwd())
# All Tests
x_Test <- read.table("UCI HAR Dataset/test/X_test.txt")
y_Test <- read.table("UCI HAR Dataset/test/Y_test.txt")
subject_Test <- read.table("UCI HAR Dataset/test/subject_test.txt")
# All Train
x_Train <- read.table("UCI HAR Dataset/train/X_train.txt")
y_Train <- read.table("UCI HAR Dataset/train/Y_train.txt")
subject_Train <- read.table("UCI HAR Dataset/train/subject_train.txt")
##Part1 - merges train and test data in one dataset (full dataset at the end)
X <- rbind(x_Test, x_Train)
Y <- rbind(y_Test, y_Train)
Subject <- rbind(subject_Test, subject_Train)
head(X)
View(X)
# View(X)
view(Y)
# View(X)
View(Y)
# View(X)
# View(Y)
View(Subject)
#2) Extracts only the measurements on the mean and standard deviation for each measurement.
# Features
features<-read.table("UCI HAR Dataset/features.txt")
View(features)
View(features)
# Mean and Standard deviations only
mean_std <- grep('mean\\(\\) | std||(\\)', features[ ,2])
# Mean and Standard deviations only
mean_std <- grep('mean\\(\\) | std\\(\\)', features[ ,2])
View(mean_std)
#2) Extracts only the measurements on the mean and standard deviation for each measurement.
# Features
features <- read.table('UCI HAR Dataset/features.txt')
# Mean and Standard deviations only
mean_std <- grep('mean\\(\\) | std\\(\\)', features[ ,2])
View(mean_std)
# Mean and Standard deviations only
mean_std <- grep('mean\\(\\)|std\\(\\)', features[ ,2])
View(mean_std)
X_mean_std <- X[ ,mean_std]
View(X_mean_std)
##3) Uses descriptive activity names to name the activities in the data set
# Activities
activity <- read.table('UCI HAR Dataset/activity_labels.txt')
View(activity)
# View(X)
View(Y)
# Replace Y with Activity Names
Y[ ,1] <- activity[Y[ ,1], 2]
View(Y)
names(Y) <- 'Activities'
View(Y)
names<-features[index,2]
names<-features[features,2]
names
View(X_mean_std)
# View(X)
# View(Y)
View(Subject)
##4) Appropriately labels the data set with descriptive variable names.
names(Subject) <- 'Subjects'
view(Subject)
view(Subject)
View(Subject)
View(features)
# View(X_mean_std)
X_names <- features(mean_std,2)
##2) Extracts only the measurements on the mean and standard deviation
##   for each measurement.
# X Features
features <- read.table('UCI HAR Dataset/features.txt')
# View(X_mean_std)
X_names <- features[mean_std,2]
View(X_names)
names(X) <- X_names
View(X)
# View(X_names)
names(X_mean_std) <- X_names
View(X_mean_std)
# View(Y)
# Column bind all data
allData <- cbind(Subject, X_mean_std, Y)
View(allData)
# View(Y)
# Column bind all data
allData <- cbind(Subject, Y, X_mean_std)
View(allData)
##########
##5) From the data set in step 4, creates a second, independent tidy data set with the average of each variable for each activity and each subject.
##########
library(dplyr)
##########
##5) From the data set in step 4, creates a second, independent tidy data set with the average of each variable for each activity and each subject.
##########
library(tidyverse)
##########
##5) From the data set in step 4, creates a second, independent tidy data set with the average of each variable for each activity and each subject.
##########
dt_allData <- data.table(allData)
##########
##5) From the data set in step 4, creates a second, independent tidy data set with the average of each variable for each activity and each subject.
##########
library(data.table)
dt_allData <- data.table(allData)
tidy_allData <- dt_allData[ ,lapply(.SD, mean), by = 'Subjects, Activities']
View(tidy_allData)
tidy_allData <- dt_allData[ ,lapply(.SD, mean), by = 'Subjects, Activities']
tidy_allData <- dt_allData[ ,lapply(.SD, mean), by = 'Subjects,Activities']
View(tidy_allData)
tidy_allData <- dt_allData[ ,lapply(.SD, mean), by = 'Activities,Subjects']
View(tidy_allData)
write.table(tidy_allData, file = 'AllTidyNow.txt')
write.table(tidy_allData, file = 'AllTidyNow.txt', row.names = FALSE)
